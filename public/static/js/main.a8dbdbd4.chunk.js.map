{"version":3,"sources":["components/auth/auth-service.js","components/auth/Signup.js","components/Navbar.js","components/auth/Login.js","components/HustleAfter5.js/Ideas.js","components/User/Todos.js/Add.js","components/User/Todos.js/List.js","components/User/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","_this","this","Object","classCallCheck","signup","username","password","service","post","then","response","data","loggedin","get","login","logout","axios","create","baseURL","withCredentials","Signup","props","possibleConstructorReturn","getPrototypeOf","call","handleFormSubmit","event","preventDefault","state","setState","getUser","catch","error","console","log","handleChange","_event$target","target","name","value","defineProperty","_this2","react_default","a","createElement","onSubmit","type","onChange","e","react_router_dom","to","Component","Navbar","logoutUser","loggedInUser","getTheUser","nextProps","objectSpread","className","style","textDecoration","onClick","Login","Ideas","Add","onChangeDesc","bind","assertThisInitialized","onChangeDate","onChangePri","desc","date","priority","completed","concat","newTodo","res","marginTop","id","checked","List","Todos_js_Add","Dashboard","Todos_js_List","App","userObj","err","_this3","react_router","exact","path","component","Dash","render","auth_Signup","auth_Login","_this4","fetchUser","components_Navbar","userInSession","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a8dbdbd4.chunk.js","sourcesContent":["import axios from \"axios\";\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: \"http://localhost:5000/api\",\n      withCredentials: true\n    });\n    this.service = service;\n  }\n  signup = (username, password) => {\n    return this.service\n      .post(\"/signup\", { username, password })\n      .then(response => response.data);\n  };\n  loggedin = () => {\n    return this.service.get(\"/loggedin\").then(response => response.data);\n  };\n  login = (username, password) => {\n    return this.service\n      .post(\"/login\", { username, password })\n      .then(response => response.data);\n  };\n\n  logout = () => {\n    return this.service.post(\"/logout\", {}).then(response => response.data);\n  };\n}\n\nexport default AuthService;\n","import React, { Component } from \"react\";\nimport AuthService from \"./auth-service\";\nimport { Link } from \"react-router-dom\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\" };\n    this.service = new AuthService();\n  }\n\n  // handleChange() and handleSubmit() will be added here\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service\n      .signup(username, password)\n      .then(response => {\n        this.setState({\n          username: \"\",\n          password: \"\"\n        });\n        this.props.getUser(response);\n      })\n      .catch(error => console.log(error));\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n  render() {\n    return (\n      // more code will be added here\n\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={e => this.handleChange(e)}\n          />\n\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={e => this.handleChange(e)}\n          />\n\n          <input type=\"submit\" value=\"Sign Up\" />\n        </form>\n\n        <p>\n          Already have account?\n          <Link to={\"/\"}> Login</Link>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"./auth/auth-service\";\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] });\n  }\n  logoutUser = () => {\n    console.log(\"this is the props ----------- \", this.props);\n    this.service.logout().then(() => {\n      this.setState({ loggedInUser: null });\n      this.props.getTheUser(this.state.loggedInUser);\n    });\n  };\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <nav className=\"nav-style\">\n          <h2>Welcome, {this.state.loggedInUser.username}</h2>\n          <Link to=\"/after5\" style={{ textDecoration: \"none\" }}>\n            Projects\n          </Link>\n          <Link to=\"/\" onClick={() => this.logoutUser()}>\n            Logout\n          </Link>\n          <Link to=\"/dashboard\"> Dashboard </Link>\n        </nav>\n      );\n    } else {\n      return (\n        <nav className=\"nav-style\">\n          <ul>\n            <li>\n              <Link to=\"/\" style={{ textDecoration: \"none\" }}>\n                Login\n              </Link>\n            </li>\n            <li>\n              <Link to=\"/signup\" style={{ textDecoration: \"none\" }}>\n                Signup\n              </Link>\n            </li>\n          </ul>\n        </nav>\n      );\n    }\n  }\n}\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport AuthService from \"./auth-service\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\" };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    this.service\n      .login(username, password)\n      .then(response => {\n        this.setState({ username: \"\", password: \"\" });\n        this.props.getUser(response);\n      })\n      .catch(error => console.log(error));\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={e => this.handleChange(e)}\n          />\n          <label>Password:</label>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={this.state.password}\n            onChange={e => this.handleChange(e)}\n          />\n          <input type=\"submit\" value=\"Log In\" />\n        </form>\n        <p>\n          Don't have account?\n          <Link to={\"/signup\"}> Sign Up</Link>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\n\nclass Ideas extends Component {\n  render() {\n    return (\n      <div>\n        <h1> this is where db goes</h1>\n        <p> also need an ADD idea feature</p>\n        <p> also save to dashboard feature ??</p>\n        <h3>SEARCH</h3>\n      </div>\n    );\n  }\n}\n\nexport default Ideas;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass Add extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeDesc = this.onChangeDesc.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onChangePri = this.onChangePri.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      desc: \"\",\n      date: \"\",\n      priority: \"\",\n      completed: false\n    };\n  }\n  onChangeDesc(e) {\n    this.setState({\n      desc: e.target.value\n    });\n  }\n  onChangeDate(e) {\n    this.setState({\n      date: e.target.value\n    });\n  }\n  onChangePri(e) {\n    this.setState({\n      priority: e.target.value\n    });\n  }\n  //use axios here\n  onSubmit(e) {\n    e.preventDefault();\n    console.log(\"formsubmitted\");\n    console.log(\"desc\", `${this.state.desc}`);\n    console.log(\"date\", `${this.state.date}`);\n    console.log(\"prio\", `${this.state.priority}`);\n    console.log(\"comp\", `${this.state.completed}`);\n    //make a new object containing input elements and values\n    const newTodo = {\n      desc: this.state.desc,\n      date: this.state.date,\n      priority: this.state.priority,\n      completed: this.state.completed\n    };\n    //the link to whatver page you are posting on & new consta as second argument\n    axios.post(\"db/add\", newTodo).then(res => console.log(res.data));\n    this.setState({\n      desc: \"\",\n      date: \"\",\n      priority: \"\",\n      completed: false\n    });\n  }\n  render() {\n    return (\n      <div style={{ marginTop: 20 }}>\n        <h3> Create a New To Do</h3>\n        <form onSubmit={e => this.onSubmit(e)}>\n          <div className=\"form-group\">\n            <label>Description:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={this.state.desc}\n              onChange={e => this.onChangeDesc(e)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Complete by:</label>\n            <input\n              type=\"date\"\n              className=\"form-control\"\n              value={this.state.date}\n              onChange={e => this.onChangeDate(e)}\n            />\n          </div>\n          <div className=\"form-group\">\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"priorityOptions\"\n                id=\"priorityLow\"\n                value=\"Low\"\n                checked={this.state.priority === \"Low\"}\n                onChange={this.onChangePri}\n              />\n              <label className=\"form-check-label\">Low</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"priorityOptions\"\n                id=\"priorityMedium\"\n                value=\"Medium\"\n                checked={this.state.priority === \"Medium\"}\n                onChange={this.onChangePri}\n              />\n              <label className=\"form-check-label\">Medium</label>\n            </div>\n            <div className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                name=\"priorityOptions\"\n                id=\"priorityHigh\"\n                value=\"High\"\n                checked={this.state.priority === \"High\"}\n                onChange={this.onChangePri}\n              />\n              <label className=\"form-check-label\">High</label>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"submit\"\n              value=\"Add To Do\"\n              className=\"btn btn-primary\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Add;\n","import React, { Component } from \"react\";\n\nimport Add from \"./Add\";\n\nclass List extends Component {\n  render() {\n    return (\n      <div>\n        <Add />\n      </div>\n    );\n  }\n}\n\nexport default List;\n","import React, { Component } from \"react\";\nimport List from \"./Todos.js/List\";\n\nclass Dashboard extends Component {\n  render() {\n    return (\n      <div>\n        <h1>this is the dashboard</h1>\n        <List />\n        <p> about w their interests</p>\n        <p> saved ideas --> w/notes or ways to prioritize</p>\n        <p> their own posts (delete/edit feature)</p>\n        <p> calendar or nodemailer??</p>\n        <p> business plan template</p>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Signup from \"./components/auth/Signup\";\nimport Navbar from \"./components/Navbar\";\nimport AuthService from \"./components/auth/auth-service\";\nimport Login from \"./components/auth/Login\";\nimport Ideas from \"./components/HustleAfter5.js/Ideas\";\nimport Dash from \"./components/User/Dashboard\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n  fetchUser() {\n    if (this.state.loggedInUser === null) {\n      this.service\n        .loggedin()\n        .then(response => {\n          this.setState({\n            loggedInUser: response\n          });\n        })\n        .catch(err => {\n          this.setState({\n            loggedInUser: false\n          });\n        });\n    }\n  }\n\n  getTheUser = userObj => {\n    this.setState({\n      loggedInUser: userObj\n    });\n  };\n\n  showRoutes() {\n    if (this.state.loggedInUser) {\n      return (\n        <Switch>\n          <Route exact path=\"/after5\" component={Ideas} />\n          <Route exact path=\"/dashboard\" component={Dash} />\n        </Switch>\n      );\n    } else {\n      return (\n        <Switch>\n          <Route\n            exact\n            path=\"/signup\"\n            render={() => <Signup getUser={this.getTheUser} />}\n          />\n          <Route\n            exact\n            path=\"/\"\n            render={() => <Login getUser={this.getTheUser} />}\n          />\n        </Switch>\n      );\n    }\n  }\n\n  render() {\n    this.fetchUser();\n    return (\n      <div className=\"App\">\n        <Navbar\n          userInSession={this.state.loggedInUser}\n          getTheUser={e => this.getTheUser(e)}\n        />\n        <Switch>\n          <Route exact path=\"/after5\" component={Ideas} />\n          <Route exact path=\"/dashboard\" component={Dash} />\n          <Route\n            exact\n            path=\"/signup\"\n            render={() => <Signup getUser={this.getTheUser} />}\n          />\n          <Route\n            exact\n            path=\"/\"\n            render={() => <Login getUser={this.getTheUser} />}\n          />\n        </Switch>\n        {/* {this.showRoutes()} */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}